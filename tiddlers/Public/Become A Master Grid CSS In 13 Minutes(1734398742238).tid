authors: [[Lun Dev]]
caption: Become A Master Grid CSS In 13 Minutes
created: 20241217012542238
creator: uzvg
description: 学习grid的一个很好的视频，动画做得很直观，介绍了css中grid布局的作用以及用法。
medium: Video
modified: 20250317090326764
modifier: uzvg
progress: Completed
rating: Personal
tags: LiteratureNotes CSS
title: Become A Master Grid CSS In 13 Minutes(1734398742238)
type: text/vnd.tiddlywiki
url: https://youtu.be/xI9G0Zh5DVA
visibility: Public
year: 2024-06

!! Grid containers:

<<rememberq "20241217031155413"
	"grid布局是在什么地方构建网格布局？"
	"在css的grid container中构建布局。">>

<<rememberq "20241217031410500"
	"grid布局如何指定列数？"
	"grid-template-columns:100px 100px 100px 250px">>

<<rememberq "20241217031512194"
	"grid布局如何指定行数？"
	"grid-template-rows: 100px 100px 100px 1fr">>

<<rememberq "20241217031550762"
	"在指定行数时，使用的`fr`单位指的是什么？"
	"fraction，代表可用空间的分数单位，用于成比例地分配剩余空间。">>

<<rememberq "20241217031731176"
	"grid-template-rows: 100px 100px 100px 1fr;如何简写？"
	"grid-template-rows: repeat(3, 100px) 1fr;">>

<<rememberq "20241217031820695"
	"在grid-template-rows中使用repeat()函数，格式是什么？"
	"不需要。grid-template-rows: repeat(3, 100px) 1fr;">>

<<rememberq "20241217031947194"
	"grid-template-columns: repeat(auto-fill, 250px)，该语句的作用是什么？"
	"意思是该grid container下的子项中，每个子项的宽度都是固定的250px，没有固定的列数，列数会随着屏幕宽度的变化，自动找到合适的列数，填充显示完间。">>

!! Grid items:

<<rememberq "20241217032413321"
	"指定grid container中某个子项在grid网格中的位置时，需要用到什么属性？"
	"在子项中用grid-column和grid-row属性。">>

<<rememberq "20241217032719491"
	"如何让item1子项占据第3、4行，1，2列的网格单元？"
	"grid-row:3 / 5; grid-column:1 / 3;">>

<<rememberq "20241217033350676"
	"grid-row:3 / 5，指的第几行？"
	"3，4行。">>

<<rememberq "20241217033454597"
	"grid-row属性值中数字，代表的是什么？"
	"是网格的行数。而非网格线的行数。">>

<<rememberq "20241217033947039"
	"在网格容器中，当子项之间发生覆盖时，处理规则是什么？"
	"根据子项在网格容器中定义的先后顺序，先定义的会被后定义的覆盖。">>

<<rememberq "20241217033548777"
	"当网格容器中的item1跟item2发生重叠，item2比item1先定义，会发生什么？"
	"item2会被item1覆盖。发生重叠时，后定义的覆盖先定义的。">>

<<rememberq "20241217034228356"
	"在不修改html代码结构跟顺序的前提下，如何在css中，定义子项在grid container中发生重叠时的处理规则？"
	"使用z-index属性。">>

<<rememberq "20241217034403488"
	"z-index属性值取什么类似的值？"
	"取整数值。可以是正整数、0、负整数。">>

<<rememberq "20241217034532382"
	"z-index如何决定grid子项发生覆盖时的处理规则？"
	"值越大，图层越高，越优先显示。">>

!! Level up customization

<<rememberq "20241217034647433"
	"grid-template-areas的作用是什么？"
	"用于在容器中定义网格区域的名字。">>

<<rememberq "20241217041440635"
	"grid-area的作用是什么？"
	"用于在grid容器子项中，指定网格区域名称跟grid-template-areas中的网格区域对应起来。">>

<<rememberq "20241217041710194"
	"grid-area与html代码中的选择器有关系吗？"
	"grid-area是逻辑上的分配，与HTML结构无直接关系，仅于grid-template-areas中定义的网格区域名称相对应。">>

<<rememberq "20241217041841727"
	"grid-area的定义格式？"
	"grid-area:grid-row-begin / grid-column-begin / grid-row-end / grid-column-end;">>

<<rememberq "20241217042019836"
	"用一个口诀来记忆grid-area的格式："
	"先始后尾，先行后列。">>

<<rememberq "20241217042423597"
	"grid-area的行列位置从0开始还是从1开始？"
	"1">>

<<rememberq "20241217042536180"
	"在grid-template-areas中，用什么表示未命名网格区域？"
	"用👉`.`表示。">>

<<rememberq "20241217042933617"
	"在grid-template-areas中，区域名用什么分开？"
	"空格。">>

<<rememberq "20241217043319728"
	"在分配grid-area时，需要注意什么？"
	"不要重叠。当在子项中使用grid-column和grid-row指定的网格单元区域跟在容器中使用grid-template-areas描述的网格区域发生冲突时，会导致网格子项的重叠。">>

!! Responsive Design:

; `auto-fill`的作用跟功能：
* 根据容器的大小，重复生成尽可能多的列或行（称为网格轨道），而不会考虑是否有足够的子项来占用这些轨道。
* 即使没有子项填满，auto-fill 仍然保留多余的轨道，保持网格的完整性。
* 常用于创建自适应布局，使网格自动调整列或行的数量以适配容器的宽度或高度。

; `auto-fill`的语法：

```html
grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
```

* `auto-fill`：自动生成尽可能多的列或行。
* `minmax()`：为每个轨道定义一个最小值和最大值，常用于限制轨道的宽度或高度范围。
** 如 minmax(100px, 1fr) 表示每个轨道最小宽度为 100px，最大宽度根据剩余空间分配。
* 最终效果是：每个轨道的宽度在`100px`到`1fr`之间，但最终形成的每个轨道的宽度是相等的。

<<rememberq "20241217044047309"
	"auto-fill的作用跟功能是什么？"
	"auto-fill是CSS Grid中与`repeat()`函数结合使用的一个关键值，用于在网格布局中自动创建列或行，以适应容器的空间。">>

<<rememberq "20241217050908141"
	"auto-fill的使用示例:"
	"`grid-template-columns: repeat(auto-fill, 250px);`。">>

!! 拓展：

* `auto-fit`与`auto-fill`的区别？
* `grid-auto-flow`的作用？

👉 