created: 20250316123110296
modified: 20250317090326802
modifier: uzvg
progress: Building
rating: Plain
tags: PermanentNotes zsh Shell
title: zsh shell history expansion
type: text/vnd.tiddlywiki
visibility: Public

!! 历史扩展简介：

* 功能：历史扩展允许用户在输入命令时引用和操作之前的命令行，便于重复执行复杂命令或修正拼写。
* 历史列表：每次命令执行前，会被保存到历史列表中，列表大小由 HISTSIZE 参数控制。最近一条命令始终保留。
* 历史事件编号：每个保存的命令称为一个“历史事件”，从 shell 启动时编号为 `1` 开始递增。

!! 历史扩展概览：

* 触发字符：默认以 `histchars` 参数的第一个字符（通常为 `!`）开始。
* 适用范围：
** 可出现在命令行的任何位置，但不包括单引号 `'...'`、C 风格引号 `$'...'` 或转义字符后。
* 组成：
** 可选的事件指示符（`Event Designator`）。
** 可选的单词指示符（`Word Designator`）。
* 执行流程：包含历史扩展的输入行会在扩展后回显，然后执行。
* 默认行为：
** 无事件指示符时，引用同一命令行上前一个历史引用的事件，或前一个命令（若无前一引用）。
** 设置 `CSH_JUNKIE_HISTORY` 选项后，无事件指示符的历史引用始终指向前一个命令。
* 示例：


|`!!` |前一个命令 |
|`!!:1`|前一个命令的第一个单词 |
|`!!$` |前一个命令的最后一个单词 |

* 其他：
** 历史扩展不可嵌套。
** `fc` 内置命令提供另一种历史支持方式。

!! 3. 事件指示符（Event Designators）

* 作用：引用历史列表中的特定命令行。
* 常见指示符：

|tc-max-width|k
|`!`|启动历史扩展 |
|`!!`|前一个命令 |
|`!n`|第 n 个命令 |
|`!-n`|当前命令减去 n 的命令 |
|`!str`|最近以 str 开头的命令 |
|`!?str[?]`|最近包含 str 的命令（? 可选，用于分隔） |
|`!#`|当前输入的命令行（截至 !# 前） |
|`!{...}`|隔离历史引用，避免与相邻字符混淆 |

!! 4. 单词指示符（Word Designators）

* 作用：指定引用命令中的哪些单词。
* 语法：通常用 `:` 与事件指示符分隔（若以 `^`、`$`、`*`、`-` 或 `%` 开头，可省略 `:`）。
* 常见指示符：

|tc-max-width|k
|`0`|第一个输入单词（命令本身） |
|`n`|第 n 个参数 |
|`^`|第一个参数（即 1） |
|`$`|最后一个参数 |
|`%`|最近 `!?str?` 搜索匹配的单词 |
|`x-y`|第 `x` 到第 `y` 个单词范围（`x` 默认为 `0`） |
|`*`|所有参数（无参数时为空） |
|`x*`|从第 `x` 个到最后一个单词（等价于 `x-$`） |
|`x-`|类似 `x*`，但省略最后一个单词。 |

!! 5. 修饰符（Modifiers）

; 作用：
* 对选定的单词进行修改，紧跟单词指示符后，用 `:` 分隔。

; 常用修饰符：

|tc-max-width|k
|`a`|转换为绝对路径（逻辑路径，不解析符号链接） |
|`A`|转换为绝对路径并解析符号链接（依赖 realpath(3)） |
|`c`|将命令名解析为绝对路径（通过 PATH） |
|`e`|保留文件名扩展名（. 后的部分） |
|`h`|移除末尾路径组件（类似 dirname） |
|`l`|转换为小写 |
|`p`|打印扩展结果但不执行 |
|`P`|转换为真实绝对路径（类似 realpath(3)，允许不存在的末尾组件） |
|`q`|引用单词，防止进一步扩展 |
|`Q`|移除一层引号 |
|`r`|移除文件名扩展名（. 及之后部分） |
|`s/l/r/`|将 l 替换为 r（首次匹配） |
|`&`|重复上一次 s 替换 |
|`t`|移除前导路径组件（类似 basename） |
|`u`|转换为大写 |
|`x`|按空格拆分为单词 |

; 扩展修饰符（仅用于参数扩展和文件名生成）：

|tc-max-width|k
|`f`|重复后续修饰符直到无变化 |
|`F:expr:`|重复修饰符指定次数 |
|`w`|对每个单词应用修饰符 |
|`W:sep:`|按指定分隔符拆分单词 |

; 其他特性：
* 修饰符可组合，按顺序应用。
* `HIST_SUBST_PATTERN` 选项启用模式匹配替换。

!! 6. 附加说明

* 历史扩展限制：不可嵌套。
* 替代工具：fc 命令提供更直观的历史操作。
* 替换细节：
** `s/l/r/` 支持全局替换（`gs/l/r` 或 `s/l/r/:G`）。
** 当 `HIST_SUBST_PATTERN` 启用时，`l` 可使用模式匹配，`#` 和 `%` 分别表示匹配开头和结尾。