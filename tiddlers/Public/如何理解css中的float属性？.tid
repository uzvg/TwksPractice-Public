created: 20240801041331657
creator: uzvg
modified: 20250317090326814
modifier: uzvg
progress: Integrating
tags: CSS PermanentNotes
title: 如何理解css中的float属性？
type: text/vnd.tiddlywiki
visibility: Public

!! 疑惑：

css中的float到底意味着什么？如果说float意味元素会从正常的文档流中浮动出来，那为什么又不会覆盖掉下面的其中元素，而是让其他元素环绕在其周围？比如一个有一个float属性为right的图片元素，下面是一堆文字，这时，文字并未被具有“浮动”属性的图片覆盖，而是环绕在其周围，所以，我该如何理解css中的float属性？

!! 答案：

在没有使用 float 属性的情况下，HTML 元素是按照从上到下的顺序线性排列的。每个元素在文档流中占据其正常的空间，后续元素会在其下方排列。

此时当一个float元素出现的时候，虽然它的高度和宽度在视觉上依然存在，但在文档流中，它的“占位”效果被忽略了，导致了后续的元素会忽略这个浮动元素的占位，直接在浮动元素的旁边开始排列，所以说，它改变了后续元素的排列方式，后续的块级元素（如段落、div 等）会尝试填充浮动元素旁边的空间。

!!! 用一个比喻彻底理解float属性：

我们可以用''河流与石头''的例子来彻底理解flaot元素，河水代表正常的文档流，而河中的石头则代表浮动的元素。

1. 河流（正常文档流）：

* 河水流动是自然的，水面上的物体（如树叶、纸船等）会随着水流的方向移动。正常文档流中的元素就像这些水面上的物体，按照它们在 HTML 中的顺序排列。

2. 石头（浮动元素）：

* 当你在河中放入一块石头（设置 `float`），这块石头会沉入水中并占据一定的空间。石头的存在会改变水流的路径，水流会绕过石头，而不是直接覆盖它。

** 如果你把石头放在河的右侧（`float: right;`），水流会从左侧流过石头，同样地，如果你把石头放在河的左侧（`float: left;`），水流会从右侧流过石头，形成一个所谓的环绕效果。

3. 水流的反应（后续元素的排列）：

* 当石头在河中时，水流会在石头的周围流动，形成一个环绕的效果。后续的水面物体（如树叶）会在石头的左侧流动，而不会被石头覆盖。
* 这就像在网页中，后续的文本或元素会围绕浮动的元素排列，而不是被它覆盖。

4. 清除浮动（清理河道）：

* 如果你想让水流在石头之后继续流动，而不是被石头影响，你可以在石头后面放置一个障碍物（如一个小坝），这样水流就会在坝的下方继续流动。这就类似于使用 `clear:both` 属性来确保某个元素不与浮动元素重叠。