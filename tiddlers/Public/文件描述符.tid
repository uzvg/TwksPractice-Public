created: 20240730061010916
creator: uzvg
modified: 20250317090326817
modifier: uzvg
progress: Expanding
rating: Probable
tags: Shell PermanentNotes
title: 文件描述符
type: text/vnd.tiddlywiki
visibility: Public

!! 文件描述符相关的基本概念：

!!! 进程的文件描述符表

* 每个进程在创建时会有一个文件描述符表，表中包含了该进程打开的所有文件的文件描述符。
* 文件描述符是一个索引，指向内核中与该文件相关的文件结构体（file structure），该结构体包含了文件的状态、位置、权限等信息。

!!! 标准文件描述符

| !Fd |!Description |!device|!device file|
|!0|标准输入（stdin）, 用于从键盘或另一个输入源读取数据|通常与键盘关联|`/dev/stdin`|
|!1|标准输出（stdout）, 用于将数据发送到屏幕或重定向到文件|通常与终端屏幕关联，如：`/dev/pts/1`|`/dev/stdout`|
|!2|标准错误（stderr）, 用于发送错误消息或诊断信息|通常与终端屏幕关联，如：`/dev/pts/1`|`/dev/stderr`|
|!>2|用户自定义文件描述符，用户可以打开其他文件或设备，并获得相应的文件描述符。比如，当你使用open()系统调用打开一个文件时，系统会返回一个新的文件描述符。|在Linux Shell中，例如：使用 `exec 3< filename` 可以打开一个文件并将其与文件描述符 `3` 关联。|保存在`/dev/fd/`目录下|

!! 文件描述符的相关拓展：

!!! 如何查看进程相关的文件描述符？

一般来说，主要分为如几个步骤：

* 先得到进程的进程号。
** 如果是当前进程，默认的`/dev/fd/`目录中的文件即是当前进程打开的设备文件所在的位置。
* 进入`/proc/PID/fd`目录下，即是所找进程的文件描述符所在的位置。
* 使用`ls -l`命令查看详细的文件信息。

可以在[[从文件描述符的角度理解重定向]]这一条目中看到详细例子。

!!! 与文件描述符相关的知识点：

* 在Linux中，重定向是一个强大的功能，它允许用户将输入和输出流从默认的终端设备重定向到文件或其他设备。重定向的原理和本质与文件描述符密切相关，[[从文件描述符的角度理解重定向]]，有助于我们加深对Linux下重定向的理解。

* 除此之处，文件描述符也常常被Shell脚本中的[[exec命令]]中，被用于重置当前Shell进程的输入输出流。
