created: 20240921083955814
creator: uzvg
modified: 20250317090326806
modifier: uzvg
progress: Rethinking
rating: Doubtful
tags: PermanentNotes 内存管理 swap
title: zswap、zram、swap分区之间的区别与联系
type: text/vnd.tiddlywiki
visibility: Public

!! 举个🌰️：

它们三个都是Linux下用于提升内存管理效率的技术，它们之间既是相互独立又相互联系的关系，可以从一个简单的例子来了解他们三个之间的区别与联系：

假设你在一台具有 4GB RAM 的 Linux 服务器上运行多个应用程序，包括一个数据库服务器和一个 Web 服务器。随着用户请求的增加，内存使用量逐渐上升，接近物理内存的上限。

|tc-max-width|k
| 组件 | 应用场景描述 | 作用 | 结果 |h
|!zram |当系统内存使用率达到 80% 时，启用 `zram`，创建 1GB 的压缩内存块。 |将内存页压缩并存储在 RAM 中，避免将数据写入磁盘的延迟。 |系统在高负载下仍然能够保持响应，用户请求的处理速度较快。 |
|!zswap |当内存使用率继续上升，达到 90% 时，启用 `zswap`，开始压缩内存页。 |将要交换的内存页进行压缩，并保留在内存中，减少对磁盘的访问。      |系统在处理大量请求时，仍然能够快速响应，因为访问压缩的内存页比从磁盘读取要快得多。 |
|!swap |当内存使用率达到 95% 时，系统需要更多的内存，使用传统的 swap 分区。 |提供额外的虚拟内存，防止系统崩溃。 |系统能够继续运行，尽管性能可能会受到影响，但至少不会因为内存耗尽而崩溃。 |

!! 总结

在这个例子中：

* `zram` 提供了快速的内存压缩，减少了对磁盘的访问。
* `zswap` 进一步优化了内存管理，通过将内存页压缩并保留在内存中，减少了 I/O 延迟。
* 传统的 `swap` 分区作为最后的防线，提供了额外的虚拟内存，确保系统在极端情况下仍然能够运行。

通过这种方式，`zram`、`zswap` 和 swap 分区各自发挥了重要作用，确保系统在高负载下的稳定性和响应性。