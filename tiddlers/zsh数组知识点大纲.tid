created: 20250226115406991
modified: 20250317081611192
modifier: uzvg
tags: PermanentNotes zsh Shell
title: zsh数组知识点大纲
type: text/vnd.tiddlywiki

|!知识点|!说明|!举例 |
|数组定义与初始化 |使用 `()` 定义，支持命令输出和动态序列初始化。 |`arr=(a b c)`<br>`arr=($(ls))`<br>`arr=({1..5})` |
|索引访问与修改 |索引从 1 开始，支持负数索引。 |`echo ${arr[2]}`<br>`arr[-1]="last"`<br>`arr+=(d)`（追加元素） |
|数组切片 |支持范围切片（含头尾），负数表示倒数。 |`${arr[2,4]}`（取第2到4元素）<br>`${arr[-3,-1]}`（取倒数第3到倒数第1） |
|数组遍历 |使用 `for` 循环或参数展开遍历。 |`for e in ${arr}; do echo $e; done`<br>`print -l ${arr}` |
|数组排序与去重 |支持升序、降序排序，以及去重操作。 |`${(o)arr}`（升序）<br>`${(u)arr}`（去重）<br>`typeset -U arr`（声明唯一）|
|关联数组（字典） |使用 `typeset -A` 定义键值对，支持增删查改。 |`typeset -A dict=([k1]=v1 [k2]=v2)`<br>`echo ${dict[k1]}` |
|字符串与数组互转 |按分隔符分割字符串为数组，或连接数组为字符串。 |`arr=(${=str})`（空格分割）<br>`"${(j:-:)arr}"`（用 `-` 连接） |
|数组过滤与查找 |通过模式匹配、条件操作过滤元素，检查存在性。 |`${arr:#*txt}`（排除含 `txt` 的元素）<br>`(( ${arr[(I)value]} ))` |
|参数扩展标志 |使用标志符增强操作（如大小写不敏感、对齐填充等）。 |`${(i)arr}`（大小写不敏感）<br>`${(l:10::0:)arr}`（左对齐填充0到10位） |
|多维数组模拟 |通过嵌套数组或关联数组模拟多维结构。 |`arr=((a b) (c d))`<br>`echo ${arr[1][2]}`（输出 `b`） |
|其他操作 |获取长度、清空数组、复制数组等基础操作。 |`${#arr}`（长度）<br>`arr=()`（清空）<br>`new=("${arr[@]}")`（复制） |

!!! 补充说明：
* 索引从 1 开始：与大多数编程语言不同，zsh 数组默认索引为 1（可通过 `setopt ksh_arrays` 改为 0 起始）。
* 参数扩展标志：zsh 独有的强大功能，如 `(s)`, `(f)`, `(j)` 等，支持复杂文本操作。
* 关联数组：需显式声明 `typeset -A`，键可以是任意字符串。